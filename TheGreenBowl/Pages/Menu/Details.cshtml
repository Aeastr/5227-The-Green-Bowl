@page
@model TheGreenBowl.Pages.Menu.DetailsModel

@{
ViewData["Title"] = $"{Model.tblMenu.name} Menu";
bool isAdmin = User.IsInRole("Admin");
}

<!-- 
    This hidden form is used to generate an anti-forgery token, which is required for secure POST requests in ASP.NET Core!!
    The token is included in AJAX requests to prevent Cross-Site Request Forgery (CSRF) attacks. 
    (the form is hidden because it doesn't need to be visible to the user)
-->
<form id="antiforgeryform" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<!-- Title Section --->

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@Html.DisplayFor(model => model.tblMenu.name)</h1>
    <div>
        @if (isAdmin)
        {
        <a asp-page="./Edit" asp-route-id="@Model.tblMenu.menuID" class="btn btn-outline-primary">
            <i class="fa-solid fa-pen-to-square"></i> Edit Menu
        </a>
        <a asp-page="./Item/AddItem" asp-route-menuId="@Model.tblMenu.menuID" class="btn btn-success ms-2">
            <i class="fa-solid fa-plus"></i> Add Item
        </a>
        }
        <a asp-page="./Index" class="btn btn-outline-secondary ms-2">
            <i class="fa-solid fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<h4>@Html.DisplayFor(model => model.tblMenu.description)</h4>
<hr/>

<!-- Categories Section --->

<h5>Categories</h5>
@if (Model.tblMenu.Categories?.Any() == true)
{
<div class="mb-4">
    @foreach (var category in Model.tblMenu.Categories)
    {
    <span class="badge bg-info me-2">@category.Category.name</span>
    }
</div>
}
else
{
<p>No categories assigned to this menu.</p>
}

<!-- Menu Contents --->

<h5>Menu Items</h5>
@if (Model.tblMenu.Menu_MenuItems?.Any() == true)
{
<div class="menu-items-grid">
    @foreach (var menuItem in Model.tblMenu.Menu_MenuItems)
    {
    <div class="menu-item-card" data-item-id="@menuItem.menuItem.itemID">
        @if (menuItem.menuItem.ImageData != null)
        {
        <img class="menu-item-image"
             src="data:image/jpg;base64,@Convert.ToBase64String(menuItem.menuItem.ImageData)"
             alt="@menuItem.menuItem.ImageDescription" />
        }
        <div class="menu-item-content">
            <h5>@menuItem.menuItem.name</h5>
            <p class="menu-item-description">@menuItem.menuItem.description</p>
            <p class="menu-item-price">@menuItem.menuItem.price.ToString("C")</p>

            <div class="menu-item-actions">
                @{
                var basketItem = Model.UserBasketItems.FirstOrDefault(bi => bi.ItemID == menuItem.menuItem.itemID);
                var itemQuantity = basketItem?.Quantity ?? 0;
                }

                @if (itemQuantity > 0)
                {
                <!-- Stepper for items already in basket -->
                <form method="post" class="updateQuantityForm" asp-page-handler="UpdateQuantity">
                    <input type="hidden" name="itemId" value="@menuItem.menuItem.itemID" />
                    <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                    <div class="quantity-controls">
                        <!-- Decrement Stepper -->
                        <button type="button" class="btn btn-sm btn-outline-danger decrement-btn">
                            <i class="fa-solid fa-minus"></i>
                        </button>
                        <!-- Form Controller -->
                        <input type="number" name="quantity" value="@itemQuantity" min="0" max="1000"
                               class="form-control mx-2 quantity-input"
                               style="width: fit-content; min-width: 50px; padding: 0.2em; display:inline-block;" />
                        <!-- Increment Stepper -->
                        <button type="button" class="btn btn-sm btn-outline-success increment-btn">
                            <i class="fa-solid fa-plus"></i>
                        </button>
                    </div>
                </form>
                }
                else
                {
                <!-- "Add to Basket" button for items not in basket -->
                <form method="post" class="addToBasketForm" style="display:inline;">
                    <input type="hidden" name="itemId" value="@menuItem.menuItem.itemID" />
                    <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                    <button type="button" class="btn btn-sm btn-outline-primary add-to-basket-btn">
                        <i class="fa-solid fa-cart-plus"></i> Add to Basket
                    </button>
                </form>
                }
            </div>
        </div>
    </div>
    }
</div>

@section Scripts {
    <script src="/js/tempMessage.js"></script>
    <script src="/js/menuCartFunctions/menuCart.js"></script>
    <script src="/js/menuCartFunctions/sendUpdateRequest.js"></script>
    <script src="/js/menuCartFunctions/stepperEventListener.js"></script>
}
}
else
{
<p>No menu items available for this menu.</p>
}
